apiVersion: apps/v1
kind: Deployment
metadata:
  name: scheme_reactive
  namespace: digital
spec:
  replicas: 1
  revisionHistoryLimit: 6
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 25%
  selector:
    matchLabels:
      app: scheme_reactive
  template:
    metadata:
      labels:
        app: scheme_reactive
    spec:
      priorityClassName: "high-priority"
      securityContext:
        runAsNonRoot: true
        runAsUser: 1001
        runAsGroup: 3000
        fsGroup: 2000
      containers:
        - name: api-digital-auth
          image: ImageName
          imagePullPolicy: Always
          securityContext:
            runAsNonRoot: true
            readOnlyRootFilesystem: true
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - all
              add:
                - CHOWN
          resources:
            requests:
              memory: "300Mi"
              cpu: "0.2"
            limits:
              memory: "600Mi"
              cpu: "0.4"
          livenessProbe:
            httpGet:
              path: /actuator/health/liveness
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
            # readiness: sabe si el pod puede recibir trafico
          readinessProbe:
            httpGet:
              path: /actuator/health/readiness
              port: 8080
            initialDelaySeconds: 100
            periodSeconds: 15
            successThreshold: 1
            failureThreshold: 3
          ports:
            - containerPort: 8080
          envFrom:
            - configMapRef:
                name: scheme_reactive
      nodeSelector:
        project: reactive